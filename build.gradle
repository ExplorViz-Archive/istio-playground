plugins {
    id 'java'
    id 'io.quarkus'
    id "com.google.cloud.tools.minikube" version "1.0.0-alpha.3"
}

repositories {
     mavenLocal()
     mavenCentral()
}

dependencies {
    implementation 'io.quarkus:quarkus-resteasy-jsonb'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

group 'net.explorviz'
version '0.1'

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

minikubeStart {
    flags = ["--vm-driver=kvm2", "--memory=16384", "--cpus=4", "--kubernetes-version=v1.18.0"]
}

task istioctlStart(type: Exec) {
    commandLine 'istioctl', 'manifest', 'apply', '--set', 'profile=default', '--set', 'values.grafana.enabled=true'
}

task playgroundBuildImage(type: Exec) {
    dependsOn 'quarkusBuild'
    commandLine 'scripts/application-tasks-wrapper.sh', 'build-image-in-minikube'
    tasks.findByName('playgroundBuildImage').mustRunAfter 'quarkusBuild'
}

task minikubeSetupIstioIngress(type: Exec) {
    commandLine 'scripts/application-tasks-wrapper.sh', 'configure_minikube_ingress'
}

task playgroundSample(type: Exec) {
    String sample=project.properties['sample'] ?: "authentication"
    String mode=project.properties['mode'] ?: "setup"
    commandLine 'src/test/scripts/samples.sh', sample, mode
}

task playgroundInitialSetup {
    dependsOn 'minikubeStart'
    dependsOn 'istioctlStart'
    dependsOn 'minikubeSetupIstioIngress'
    dependsOn 'playgroundBuildImage'
    tasks.findByName('istioctlStart').mustRunAfter 'minikubeStart'
    tasks.findByName('minikubeSetupIstioIngress').mustRunAfter 'istioctlStart'
    tasks.findByName('playgroundBuildImage').mustRunAfter 'istioctlStart'
}
