# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Test istio in Kubernetes in Docker

on:
  push:
    branches: 
     - master
     - github-actions
  pull_request:
    branches: [ master ]

jobs:
  test-istio:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: engineerd/setup-kind@v0.3.0
    - name: Testing
      run: |
        kubectl cluster-info
        kubectl get pods -n kube-system
        echo "current-context:" $(kubectl config current-context)
        echo "environment-kubeconfig:" ${KUBECONFIG}

        docker pull docker.pkg.github.com/explorviz/istio-playground/native:latest
        kind load docker-image docker.pkg.github.com/explorviz/istio-playground/native:latest

        curl -L https://istio.io/downloadIstio | sh -
        export PATH=$PWD/istio-1.5.1/bin:$PATH
        
        istioctl manifest apply --set profile=default

        kubectl create namespace quarkus &
        kubectl apply -f <(istioctl kube-inject -f src/main/kube/app.yaml) -n quarkus
        kubectl apply -f src/main/kube/gateway.yaml
        kubectl apply -f src/main/kube/authentication-policy.yaml
        sleep 15
        kubectl get services --all-namespaces
        kubectl get pods --all-namespaces
        kubectl get svc istio-ingressgateway -n istio-system

        export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
        export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')

        export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT
        echo $GATEWAY_URL
        
        curl http://$GATEWAY_URL/login.html

