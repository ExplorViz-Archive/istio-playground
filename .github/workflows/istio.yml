# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Test istio in Kubernetes in Docker

on:
  push:
    branches: 
     - master
     - github-actions
     - istio-actions
  pull_request:
    branches: [ master ]

jobs:
  build-latest-jvm-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build the executables
      run: ./gradlew quarkusBuild
    - uses: whoan/docker-build-with-cache-action@v5
      with:
        username: ${{ github.actor }}
        password: "${{ secrets.GITHUB_TOKEN }}"
        image_name: explorviz/istio-playground/jvm
        image_tag: latest
        registry: docker.pkg.github.com
        dockerfile: src/main/docker/Dockerfile.jvm
  test-istio:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: engineerd/setup-kind@v0.3.0
    - name: Setup istio
      uses: ./.github/actions/setup-istio
      id: setup-istio
    - id: startIstio
      name: Start istio-playground
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
        docker pull docker.pkg.github.com/explorviz/istio-playground/jvm:latest
        kind load docker.pkg.github.com/explorviz/istio-playground/jvm:latest

        kubectl create namespace quarkus
        kubectl label namespace quarkus istio-injection=enabled

        kubectl apply -f src/main/kube/app.yaml -n quarkus
        kubectl apply -f src/main/kube/gateway.yaml
        kubectl apply -f src/main/kube/authentication-policy.yaml

        sleep 25
        kubectl get services --all-namespaces
        kubectl get pods --all-namespaces
        kubectl get svc istio-ingressgateway -n istio-system

        export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
        export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')
        export INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].status.hostIP}')

        echo "::set-env name=gateway_url::$INGRESS_HOST:$INGRESS_PORT"
    - name: Test accessibility of pages
      run: |
        curl -s http://${{env.gateway_url}}/login.html | grep "Login page"
        curl -s http://${{env.gateway_url}}/asecret.html | grep "RBAC: access denied"

