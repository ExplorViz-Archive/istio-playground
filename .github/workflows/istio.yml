# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Test istio in Kubernetes in Docker

on:
  push:
    branches: 
     - master
     - feature/**
  pull_request:
    branches: 
     - master 

jobs:
  test-istio:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: [authentication, authorization]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build the executables
      run: ./gradlew quarkusBuild
    - name: Build jvm image for local use
      # echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      # docker pull -q --all-tags docker.pkg.github.com/explorviz/istio-playground/jvm-stages || true
      run: |
        docker build -f src/main/docker/Dockerfile.jvm -t docker.pkg.github.com/explorviz/istio-playground/jvm:latest .
    - uses: engineerd/setup-kind@v0.3.0
    - name: Setup istio
      uses: ./.github/actions/setup-istio
      id: setup-istio
    - id: startIstio
      name: Start istio-playground with ${{ matrix.mode }} setup
      run: |
        kind load docker-image docker.pkg.github.com/explorviz/istio-playground/jvm:latest

        src/test/scripts/samples.sh -s ${{ matrix.mode }} setup

        INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
        INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].status.hostIP}')
        echo "::set-env name=gateway_url::$INGRESS_HOST:$INGRESS_PORT"
    - name: Test ${{ matrix.mode }}
      run: |
        export GATEWAY_URL=${{env.gateway_url}}
        src/test/scripts/samples.sh -s ${{ matrix.mode }} verify
